{"version":3,"sources":["utils.js","components/LoginForm.js","components/FoodList.js","components/MyCart.js","components/SignupForm.js","App.js","reportWebVitals.js","index.js"],"names":["login","credential","username","password","loginUrl","fetch","method","headers","credentials","then","response","status","Error","signup","data","body","JSON","stringify","LoginForm","state","loading","onFinish","console","log","setState","message","success","props","onSuccess","catch","err","error","finally","render","name","style","width","margin","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","Component","Option","Select","AddToCartButton","itemId","useState","setLoading","title","icon","PlusOutlined","onClick","addItemToCart","FoodList","curRest","setCurRest","restaurants","setRestaurants","loadingRest","setLoadingRest","foodData","setFoodData","loadingFood","setLoadingFood","useEffect","json","restData","restId","menuData","value","onSelect","map","item","id","marginTop","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","extra","src","imageUrl","alt","height","display","price","Text","Typography","MyCart","cartVisible","setCartVisible","cartData","setCartData","checking","setChecking","onCloseDrawer","shape","onClose","visible","footer","justifyContent","strong","totalPrice","toFixed","marginRight","disabled","orderItemList","length","Meta","menuItem","description","SignupForm","displayModal","handleCancel","signupOnClick","this","onCancel","okButtonProps","destroyOnClose","preserve","Password","Header","Layout","Content","Title","App","authed","setAuthed","className","level","color","lineHeight","marginBottom","padding","maxHeight","overflowY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.31712166.chunk.js","sourcesContent":["export const login = credential => {\r\n    const {username, password} = credential\r\n    const loginUrl = `/login?username=${username}&password=${password}`\r\n\r\n    return fetch(loginUrl, {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        credentials: \"include\"\r\n    }).then(response => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to log in\")\r\n        }\r\n    })\r\n}\r\n\r\nexport const signup = (data) => {\r\n    const signupUrl = \"/signup\"\r\n\r\n    return fetch(signupUrl, {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(data)\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to sign up\")\r\n        }\r\n    })\r\n}\r\n\r\nexport const getRestaurants = () => {\r\n    return fetch(\"/restaurants\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get restaurants\")\r\n        }\r\n        return response.json()\r\n    })\r\n}\r\n\r\nexport const getMenus = (restId) => {\r\n    return fetch(`/restaurant/${restId}/menu`).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get menus\")\r\n        }\r\n        return response.json()\r\n    })\r\n}\r\n\r\nexport const getCart = () => {\r\n    return fetch(\"/cart\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to get shopping cart data\")\r\n        }\r\n        return response.json()\r\n    })\r\n}\r\n\r\nexport const addItemToCart = (itemId) => {\r\n    return fetch(`/order/${itemId}`, {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        credentials: \"include\"\r\n    }).then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to add menu item to shopping cart\")\r\n        }\r\n    })\r\n}\r\n\r\nexport const checkout = () => {\r\n    return fetch(\"/checkout\").then((response) => {\r\n        if (response.status < 200 || response.status >= 300) {\r\n            throw Error(\"Fail to checkout\")\r\n        }\r\n    })\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Form, Input, Button, message} from 'antd'\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons'\r\nimport {login} from \"../utils\"\r\n\r\nclass LoginForm extends Component {\r\n    state = {loading: false}\r\n\r\n    onFinish = data => {\r\n        console.log('Received values of sign in form: ', data)\r\n        this.setState({loading: true})\r\n        login(data)\r\n            .then(() => {\r\n                message.success(`Login Successful`)\r\n                this.props.onSuccess()\r\n            })\r\n            .catch(err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally(() => {\r\n                this.setState({loading: false})\r\n            })\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            <Form\r\n                name=\"normal_login\"\r\n                onFinish={this.onFinish}\r\n                style={{width: 300, margin: \"auto\"}}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{required: true, message: 'Please input your username!'}]}\r\n                >\r\n                    <Input prefix={<UserOutlined/>} placeholder=\"Username\"/>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{required: true, message: 'Please input your password!'}]}\r\n                >\r\n                    <Input\r\n                        prefix={<LockOutlined/>}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                    <Button type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            loading={this.state.loading}\r\n                    >Login\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginForm\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Select, message, List, Card, Tooltip, Button} from 'antd'\r\nimport {PlusOutlined} from \"@ant-design/icons\"\r\nimport {getRestaurants, getMenus, addItemToCart} from \"../utils\"\r\n\r\nconst {Option} = Select\r\n\r\nconst AddToCartButton = ({itemId}) => {\r\n    const [loading, setLoading] = useState(false)\r\n\r\n    const addToCart = () => {\r\n        console.log('itemId: ', itemId)\r\n        setLoading(true)\r\n        addItemToCart(itemId)\r\n            .then(() => {\r\n                message.success(`Successfully add item`)\r\n            })\r\n            .catch(err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Tooltip title=\"Add to shopping cart\">\r\n            <Button\r\n                type=\"primary\"\r\n                icon={<PlusOutlined/>}\r\n                onClick={addToCart}\r\n                loading={loading}\r\n            />\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nconst FoodList = () => {\r\n    const [curRest, setCurRest] = useState()\r\n    const [restaurants, setRestaurants] = useState([])\r\n    const [loadingRest, setLoadingRest] = useState(false)\r\n    const [foodData, setFoodData] = useState([])\r\n    const [loadingFood, setLoadingFood] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setLoadingRest(true)\r\n        getRestaurants()\r\n            .then(restData => {\r\n                console.log('restData: ', restData)\r\n                setRestaurants(restData)\r\n            })\r\n            .catch(err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally(() => {\r\n                setLoadingRest(false)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (curRest) {\r\n            setLoadingFood(true)\r\n            getMenus(curRest)\r\n                .then(menuData => {\r\n                    console.log('menuData: ', menuData)\r\n                    setFoodData(menuData)\r\n                })\r\n                .catch(err => {\r\n                    message.error(err.message)\r\n                })\r\n                .finally(() => {\r\n                    setLoadingFood(false)\r\n                })\r\n        }\r\n    }, [curRest])\r\n\r\n    return (\r\n        <>\r\n            <Select value={curRest}\r\n                    placeholder=\"Select a restaurant\"\r\n                    style={{width: 300}}\r\n                    onSelect={value => setCurRest(value)}\r\n                    loading={loadingRest}\r\n            >{\r\n                restaurants.map(item => {\r\n                    return <Option key={item.id} value={item.id}>{item.name}</Option>\r\n                })\r\n            }\r\n            </Select>\r\n            {\r\n                curRest && <List\r\n                    style={{marginTop: 20}}\r\n                    grid={{\r\n                        gutter: 16,\r\n                        xs: 1,\r\n                        sm: 2,\r\n                        md: 4,\r\n                        lg: 4,\r\n                        xl: 3,\r\n                        xxl: 3,\r\n                    }}\r\n                    loading={loadingFood}\r\n                    dataSource={foodData}\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <Card\r\n                                title={item.name}\r\n                                extra={<AddToCartButton itemId={item.id}/>}\r\n                            >\r\n                                <img src={item.imageUrl}\r\n                                     alt={item.name}\r\n                                     style={{height: 'auto', width: \"100%\", display: \"block\"}}\r\n                                />\r\n                                {`Price: ${item.price}`}\r\n                            </Card>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FoodList\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Drawer, Button, Typography, message, List} from 'antd'\r\nimport {getCart, checkout} from \"../utils\"\r\n\r\nconst {Text} = Typography\r\n\r\nfunction MyCart() {\r\n    const [cartVisible, setCartVisible] = useState(false)\r\n    const [cartData, setCartData] = useState({})\r\n    const [loading, setLoading] = useState(false)\r\n    const [checking, setChecking] = useState(false)\r\n\r\n    const onOpenDrawer = () => {\r\n        setCartVisible(true)\r\n    }\r\n\r\n    const onCloseDrawer = () => {\r\n        setCartVisible(false)\r\n    }\r\n\r\n    const onCheckOut = () => {\r\n        setChecking(true)\r\n        checkout()\r\n            .then(() => {\r\n                message.success(\"Successfully checkout\")\r\n                setCartVisible(false)\r\n            })\r\n            .catch(err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally(() => {\r\n                setChecking(false)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!cartVisible) {\r\n            return\r\n        }\r\n\r\n        setLoading(true)\r\n        getCart()\r\n            .then(cartData => {\r\n                console.log('cartData: ', cartData)\r\n                setCartData(cartData)\r\n            })\r\n            .catch(err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally(() => {\r\n                setLoading(false)\r\n            })\r\n    }, [cartVisible])\r\n\r\n    return (\r\n        <>\r\n            <Button type=\"primary\"\r\n                    shape=\"round\"\r\n                    onClick={onOpenDrawer}\r\n            >Cart\r\n            </Button>\r\n            <Drawer\r\n                title=\"My Shopping Cart\"\r\n                onClose={onCloseDrawer}\r\n                visible={cartVisible}\r\n                width={520}\r\n                footer={\r\n                    <div style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-between\",\r\n                    }}>\r\n                        <Text strong={true}>\r\n                            {/*{`Total price: $${cartData?.totalPrice.toFixed(2)}`} /!*No. 1*!/*/}\r\n                            {/*{`Total price: $${cartData ? cartData.totalPrice.toFixed(2) : 0.0.toFixed(2)}`} /!*No. 2*!/*/}\r\n                            {`Total price: $${cartData.totalPrice ? cartData.totalPrice.toFixed(2) : 0.0.toFixed(2)}`} {/*No. 3*/}\r\n                            {/*{`Total price: $${cartData.totalPrice.toFixed(2)}`} /!*No. 4*!/*/}\r\n                        </Text>\r\n                        <div>\r\n                            <Button\r\n                                style={{marginRight: 8}}\r\n                                onClick={onCloseDrawer}\r\n                            >Cancel\r\n                            </Button>\r\n                            <Button\r\n                                type=\"primary\"\r\n                                onClick={onCheckOut}\r\n                                loading={checking}\r\n                                // disabled={loading || cartData?.orderItemList.length === 0} /*No. 1*/\r\n                                // disabled={loading || (cartData && cartData.orderItemList.length === 0)} /*No. 2*/\r\n                                disabled={loading || (cartData.orderItemList && cartData.orderItemList.length === 0)} /*No. 3*/\r\n                                // disabled={loading || cartData.orderItemList.length === 0} /*No. 4*/\r\n                            >Checkout\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            >\r\n                <List\r\n                    loading={loading}\r\n                    // dataSource={cartData?.orderItemList} /*No. 123*/\r\n                    // dataSource={cartData ? cartData.orderItemList : []} /*No. 123*/\r\n                    dataSource={cartData.orderItemList ? cartData.orderItemList : []} /*No. 123*/\r\n                    // dataSource={cartData.orderItemList} /*No. 4*/\r\n                    renderItem={item => (\r\n                        <List.Item>\r\n                            <List.Item.Meta\r\n                                title={item.menuItem.name}\r\n                                description={`$${item.price}`}\r\n                            />\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n            </Drawer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyCart\r\n","import React, {Component} from 'react'\r\nimport {Modal, Button, Form, Input, message} from 'antd'\r\nimport {UserOutlined, LockOutlined} from '@ant-design/icons'\r\nimport {signup} from \"../utils\"\r\n\r\nclass SignupForm extends Component {\r\n    state = {displayModal: false, loading: false}\r\n\r\n    handleCancel = () => {\r\n        this.setState({displayModal: false})\r\n    }\r\n\r\n    signupOnClick = () => {\r\n        this.setState({displayModal: true})\r\n    }\r\n\r\n    onFinish = data => {\r\n        console.log('Received values of sign up form: ', data)\r\n        this.setState({loading: true})\r\n        signup(data)\r\n            .then(() => {\r\n                message.success(`Successfully signed up`)\r\n                this.setState({displayModal: false})\r\n            })\r\n            .catch(err => {\r\n                message.error(err.message)\r\n            })\r\n            .finally(() => {\r\n                this.setState({loading: false})\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Button\r\n                    type=\"primary\"\r\n                    shape=\"round\"\r\n                    onClick={this.signupOnClick}\r\n                >Register\r\n                </Button>\r\n                <Modal\r\n                    title=\"Register\"\r\n                    visible={this.state.displayModal}\r\n                    onCancel={this.handleCancel}\r\n                    okButtonProps={{style: {display: 'none'}}}\r\n                    //footer={null}\r\n                    destroyOnClose={true}\r\n                >\r\n                    <Form\r\n                        name=\"normal_register\"\r\n                        onFinish={this.onFinish}\r\n                        preserve={false}\r\n                    >\r\n                        <Form.Item\r\n                            name=\"email\"\r\n                            rules={[{required: true, message: \"Please input your email!\"}]}\r\n                        >\r\n                            <Input prefix={<UserOutlined/>} placeholder=\"Email\"/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            rules={[{required: true, message: \"Please input your password!\"}]}\r\n                        >\r\n                            <Input.Password prefix={<LockOutlined/>} placeholder=\"Password\"/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"firstName\"\r\n                            rules={[{required: true, message: \"Please input your first name!\"}]}\r\n                        >\r\n                            <Input placeholder=\"First Name\"/>\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                            name=\"lastName\"\r\n                            rules={[{required: true, message: \"Please input your last name!\"}]}\r\n                        >\r\n                            <Input placeholder=\"Last Name\"/>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item>\r\n                            <Button type=\"primary\" htmlType=\"submit\" loading={this.state.loading}>\r\n                                Register\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupForm\r\n","import React, {useState} from 'react'\nimport {Layout, Typography} from \"antd\"\nimport './App.css'\nimport LoginForm from \"./components/LoginForm\"\nimport FoodList from \"./components/FoodList\"\nimport MyCart from \"./components/MyCart\"\nimport SignupForm from \"./components/SignupForm\"\n\nconst {Header, Content} = Layout\nconst {Title} = Typography\n\nfunction App() {\n    const [authed, setAuthed] = useState(false)\n\n    return (\n        <Layout style={{height: \"100vh\"}}>\n            <Header>\n                <div className=\"header\">\n                    <Title level={2}\n                           style={{color: \"white\", lineHeight: \"inherit\", marginBottom: 0}}\n                    >JinFood\n                    </Title>\n                    <div>{authed ? <MyCart/> : <SignupForm/>}</div>\n                </div>\n            </Header>\n            <Content\n                style={{\n                    padding: \"50px\",\n                    maxHeight: \"calc(100% - 64px)\",\n                    overflowY: \"auto\",\n                }}\n            >{\n                authed ? <FoodList/> : <LoginForm onSuccess={() => setAuthed(true)}/>\n            }\n            </Content>\n        </Layout>\n    )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}